{"version":3,"sources":["pdk_SliderProgressBarParagraph.js"],"names":["app","require","cc","Class","extends","subGameName","properties","ScrollThreshold","EventNode","Node","ProgressBar","OnLoad","JS_Name","node","name","ComTool","slider","getComponent","Slider","paragraphPositionDict","LocalDataManager","InitData","keyIDList","showDataList","isSendEvent","keyCount","length","ErrLog","push","offProgress","index","keyID","progress","minProgress","maxProgress","ShowBackgroundLabel","OnSliderEvent","backGroundNode","getChildByName","count","childName","StringAddNumSuffix","childPath","join","labelNode","find","childLabel","Label","string","ResetProgress","nowProgress","_dragging","emit","SetChooseKeyID","GetChooseKeyID"],"mappings":"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","file":"pdk_SliderProgressBarParagraph.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\ui\\uiEffect","sourcesContent":["/*\r\n SliderProgressBarParagraph.js 滑动进度分段带进度条显示\r\n */\r\n\r\nvar app = require(\"pdk_app\");\r\n\r\ncc.Class({\r\n\textends: require(app.subGameName + \"_BaseComponent\"),\r\n\r\n\tproperties: {\r\n\t\tScrollThreshold: 0.5,\r\n\t\tEventNode:cc.Node,\r\n\t\tProgressBar:cc.ProgressBar,\r\n\t},\r\n\r\n\t// use this for initialization\r\n\tOnLoad: function () {\r\n\t\tthis.JS_Name = this.node.name + \"_SliderProgressBarParagraph\";\r\n\r\n        this.ComTool = app[app.subGameName + \"_ComTool\"]();\r\n\r\n\r\n\t\tthis.slider = this.node.getComponent(cc.Slider);\r\n\r\n\t\tthis.paragraphPositionDict = {};\r\n\r\n        this.LocalDataManager = app.LocalDataManager();\r\n\r\n\t},\r\n\r\n\tInitData:function(keyIDList, showDataList=[], isSendEvent=true){\r\n\t\tthis.paragraphPositionDict = {};\r\n\r\n\t\tlet keyCount = keyIDList.length;\r\n\t\tif(!keyCount){\r\n\t\t\tthis.ErrLog(\"InitData keyIDList empty\", keyIDList);\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//如果只有一个则设置开始结束一样\r\n\t\telse if(keyCount == 1){\r\n\t\t\tkeyIDList.push(keyIDList[0]);\r\n\t\t\tkeyCount = keyIDList.length;\r\n\t\t}\r\n\r\n\t\tlet offProgress = this.ScrollThreshold*1/(keyCount-1);\r\n\r\n\t\tfor(let index=0; index<keyCount; index++){\r\n\r\n\t\t\tlet keyID = keyIDList[index];\r\n\t\t\tlet progress = index/(keyCount-1);\r\n\r\n\t\t\tlet minProgress = progress - offProgress;\r\n\t\t\tlet maxProgress = progress + offProgress;\r\n\r\n\t\t\tif(minProgress < 0){\r\n\t\t\t\tminProgress = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif(maxProgress > 1){\r\n\t\t\t\tmaxProgress = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//分段每个点的进度位置,最小最大进入范围\r\n\t\t\tthis.paragraphPositionDict[index] = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"KeyID\":keyID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Progress\":progress,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"MinProgress\":minProgress,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"MaxProgress\":maxProgress,\r\n\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif(showDataList.length){\r\n            this.ShowBackgroundLabel(showDataList)\r\n        }\r\n\t\t//初始化默认从0开始\r\n\t\tthis.slider.progress = 0;\r\n\r\n\t\tif(isSendEvent){\r\n            this.OnSliderEvent(this.slider);\r\n        }\r\n\t},\r\n\r\n\tShowBackgroundLabel:function(showDataList){\r\n\r\n\t\tlet backGroundNode = this.node.getChildByName(\"Background\");\r\n\t\tlet count = showDataList.length;\r\n\r\n\t\tfor(let index=count; index>0; index--){\r\n\t\t\tlet childName = this.ComTool.StringAddNumSuffix(\"yuandian\",index,2);\r\n\t\t\tlet childPath = [childName, \"lb\"].join(\"/\");\r\n\t\t\tlet labelNode = cc.find(childPath, backGroundNode);\r\n\t\t\tif(!labelNode){\r\n\t\t\t\tthis.ErrLog(\"ShowBackgroundLabel not find:%s,%s\", childPath, this.node.name);\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tlet childLabel = labelNode.getComponent(cc.Label);\r\n\t\t\tchildLabel.string = showDataList[index-1];\r\n\t\t}\r\n\t},\r\n\r\n    OnSliderEvent:function(slider){\r\n        this.ResetProgress();\r\n\r\n        if(this.ProgressBar){\r\n            this.ProgressBar.progress = this.slider.progress;\r\n        }\r\n    },\r\n\r\n\tResetProgress:function(){\r\n\r\n\t\tlet nowProgress = this.slider.progress;\r\n\r\n\t\t//遍历所有的坐标进度点\r\n\t\tfor(let index in this.paragraphPositionDict){\r\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\r\n\t\t\t//查找当前进度位置停留值\r\n\t\t\tif(paragraphPositionDict[\"MinProgress\"] <= nowProgress && nowProgress <= paragraphPositionDict[\"MaxProgress\"]){\r\n\r\n\t\t\t\tlet progress = paragraphPositionDict[\"Progress\"];\r\n\t\t\t\t//如果正在滑动中跳出\r\n\t\t\t\tif( this.slider._dragging){\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.slider.progress = progress;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.EventNode){\r\n\t\t\t\t\tthis.EventNode.emit(\"SliderParagraph\",  {\"KeyID\":paragraphPositionDict[\"KeyID\"], \"Node\":this.node,\"Progress\":progress});\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//设置滑动到指定key位置\r\n\tSetChooseKeyID:function(keyID){\r\n\t\tfor(let index in this.paragraphPositionDict){\r\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\r\n\t\t\tif(paragraphPositionDict[\"KeyID\"] == keyID){\r\n\t\t\t\tthis.slider.progress = paragraphPositionDict[\"Progress\"];\r\n\t\t\t\tthis.OnSliderEvent(this.slider);\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.ErrLog(\"SetChooseKeyID(%s) not find:\", keyID, this.paragraphPositionDict);\r\n\t},\r\n\r\n\t//获取当前选中的keyID\r\n\tGetChooseKeyID:function(){\r\n\t\tlet nowProgress = this.slider.progress;\r\n\r\n\t\tfor(let index in this.paragraphPositionDict){\r\n\t\t\tlet paragraphPositionDict = this.paragraphPositionDict[index];\r\n\t\t\t//查找当前进度位置停留值\r\n\t\t\tif(paragraphPositionDict[\"MinProgress\"] <= nowProgress && nowProgress <= paragraphPositionDict[\"MaxProgress\"]){\r\n\t\t\t\treturn paragraphPositionDict[\"KeyID\"]\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.ErrLog(\"GetChooseKeyID not find:%s\", nowProgress, this.paragraphPositionDict);\r\n\t\treturn 0\r\n\t},\r\n\r\n});\r\n"]}