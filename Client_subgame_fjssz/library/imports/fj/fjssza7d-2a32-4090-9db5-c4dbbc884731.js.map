{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\common/assets\\script\\common\\fjssz_SysDataManager.js"],"names":["app","require","sss_SysDataManager","BaseClass","extend","Init","JS_Name","FieldLine","DataLine","Key","isNative","tableDict","jsonDict","GetTableDict","tableName","console","log","json","GetJsonData","dataDict","ReloadTable","keyNameList","hasOwnProperty","that","ReadTable","then","textData","keyList","Object","keys","count","length","index","keyName","OnLoadTableEnd","catch","error","stack","DeleteTable","tablePath","promisefunc","resolve","reject","cc","loader","loadRes","bluebird","tableInfo","TransformTextData","DecodeText","textDataList","text","split","lineCount","lineNum","fieldNameList","fieldCount","tableDataDict","index_i","textLineDataStr","replace","textLineDataList","rowCount","JSON","stringify","rowKey","rowDataDict","index_j","value","GetTransformValue","undefined","buffCount","outText","substring","parseInt","String","fromCharCode","valueStr","startStr","endStr","parse","indexOf","Function","isNaN","Number","GetKeyNameStr","valueDict","keyValueList","push","join","OnLoadJson","jsonFileName","jsonData","GetMuchKeyStr","DebugOutput","g_sss_SysDataManager","exports","GetModel"],"mappings":"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","file":"fjssz_SysDataManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\common","sourcesContent":["/*\r\n    客户端系统配置表管理器\r\n*/\r\nvar app = require(\"fjssz_app\");\r\n\r\nvar sss_SysDataManager = app.BaseClass.extend({\r\n\r\n    Init:function(){\r\n    \tthis.JS_Name = app[\"subGameName\"] + \"_SysDataManager\";\r\n\r\n\t\t//字段key开始行\r\n\t\tthis.FieldLine = 1;\r\n\t\t//有效配置开始行\r\n\t\tthis.DataLine = 2;\r\n\r\n\t\tthis.Key = 1245;\r\n\r\n\t\tthis.isNative = false;\r\n\r\n    \tthis.tableDict = {};\r\n\r\n    \tthis.jsonDict = {};\r\n    },\r\n\r\n\t// 获取表字典数据\r\n\tGetTableDict:function(tableName){\r\n\t\t//每个小游戏表名字加上游戏简写前缀\r\n\t\t// tableName = app.subGameName + \"_\" + tableName;\r\n\t\t//如果表为读取，则读取\r\n\t\tif (!this.tableDict[tableName]){\r\n\t\t\tconsole.log(\"GetTableDict not load  \"+tableName);\r\n\t\t\treturn {}\r\n\t\t}\r\n\t\treturn this.tableDict[tableName].json;\r\n\t},\r\n\r\n\t//获取json配置文件\r\n\tGetJsonData:function(tableName){\r\n\t\tlet dataDict = this.jsonDict[tableName];\r\n\t\tif(!dataDict){\r\n\t\t\tconsole.log(\"GetJsonData tableName not find  \"+tableName);\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn dataDict\r\n\t},\r\n\r\n\t// 重载表数据\r\n\tReloadTable:function(tableName, keyNameList=\"\"){\r\n\r\n\t\t//可能本身就不存在表数据,初始化空字典\r\n\t\tif(!this.tableDict.hasOwnProperty(tableName)){\r\n\t\t\tthis.tableDict[tableName] = {};\r\n\t\t}\r\n\r\n\t\tlet that = this;\r\n\r\n\t\tthis.ReadTable(tableName)\r\n\t\t\t.then(function(textData){\r\n\t\t\t\t\r\n\t\t\t\tlet dataDict = that.tableDict[tableName];\r\n\r\n\t\t\t\t//清空原来的字典数据\r\n\t\t\t\tlet keyList = Object.keys(dataDict);\r\n\t\t\t\tlet count = keyList.length;\r\n\t\t\t\tfor(let index=0; index<count; index++){\r\n\t\t\t\t\tlet keyName = keyList[index];\r\n\t\t\t\t\tdelete dataDict[keyName];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthat.OnLoadTableEnd(tableName, keyNameList, textData, dataDict);\r\n\t\t\t})\r\n\t\t\t.catch(function(error){\r\n\t\t\t\tconsole.log(\"ReloadTable error:\" + tableName + \":\" + error.stack);\r\n\t\t\t})\r\n\t},\r\n\r\n\t// 删除表数据\r\n\tDeleteTable:function(tableName){\r\n\t\tdelete this.tableDict[tableName];\r\n\t},\r\n\r\n\t// 读取表数据\r\n\tReadTable:function(tableName){\r\n\t\t\r\n\t\tvar that = this;\r\n    \tvar tablePath = 'configs/' + tableName;\r\n\r\n        //创建异步函数\r\n        let promisefunc = function(resolve, reject){\r\n                                                    //加载资源\r\n                                                    cc.loader.loadRes(tablePath, function (error, textData) {\r\n\r\n                                                        if(error){\r\n                                                            reject(error);\r\n                                                            return\r\n                                                        }\r\n\r\n                                                        resolve(textData);\r\n\r\n                                                    })};\r\n        //返回异步对象\r\n        return new app.bluebird(promisefunc);\r\n\r\n    },\r\n\r\n    // 表数据读取完成\r\n\tOnLoadTableEnd:function(tableName, keyNameList, textData, tableInfo={}){\r\n\t\tthis.tableDict[tableName] = textData;\r\n\t\t// console.log(\"OnLoadTableEnd tableName: \" + tableName + \",textData: \" + JSON.stringify(textData.json));\r\n\t},\r\n\t\r\n\t// 转化表为字典\r\n\tTransformTextData:function(tableName, textData){\r\n\r\n\t\tif(this.isNative){\r\n\t\t\ttextData = this.DecodeText(textData);\r\n\t\t}\r\n\r\n\t\tlet textDataList = textData.text.split(\"\\n\");\r\n\t\tlet lineCount = textDataList.length;\r\n\t\tif(!lineCount){\r\n\t\t\tconsole.error(\"TransformTextData(%s) not data\", tableName);\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet lineNum = -1;\r\n\r\n\t\tlet fieldNameList = null;\r\n\t\tlet fieldCount = null;\r\n\r\n\t\tlet tableDataDict = {};\r\n\r\n\t\tfor(let index_i =0; index_i<lineCount; index_i++){\r\n\t\t\tlet textLineDataStr = textDataList[index_i];\r\n\r\n\t\t\t//去除空格\r\n\t\t\ttextLineDataStr = textLineDataStr.replace(/(\\s*$)/g, \"\");\r\n\t\t\t//读到最后一行，跳出\r\n\t\t\tif(!textLineDataStr){\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tlineNum += 1;\r\n\t\t\tlet textLineDataList = textLineDataStr.split(\"\\t\");\r\n\t\t\t\r\n\t\t\t//如果是key行,记录key数据\r\n\t\t\tif(lineNum === this.FieldLine){\r\n\t\t\t\tfieldNameList = textLineDataList;\r\n\t\t\t\tfieldCount = fieldNameList.length;\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\telse if(lineNum >= this.DataLine){\r\n\t\t\t\t\r\n\t\t\t\tlet rowCount = textLineDataList.length;\r\n\t\t\t\tif(rowCount != fieldCount){\r\n\t\t\t\t\tconsole.error(\"TransformTextData(%s),textLineDataList:%s error need(%s)\", tableName, JSON.stringify(textLineDataList), fieldCount);\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t\tlet rowKey = textLineDataList[0];\r\n\t\t\t\tlet rowDataDict = {};\r\n\t\t\t\tfor(var index_j=0; index_j<rowCount; index_j++){\r\n\t\t\t\t\tlet value = textLineDataList[index_j];\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvalue = this.GetTransformValue(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(error){\r\n\t\t\t\t\t\tconsole.error(\"GetTransformValue(%s)(%s), error:%s\", tableName, value, error.stack);\r\n\t\t\t\t\t\t//throw new Error(\"Read Text Fail:\" + tablePath);\r\n\t\t\t\t\t\tvalue = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\trowDataDict[fieldNameList[index_j]] = value;\r\n\t\t\t\t}\r\n\t\t\t\tif(tableName == \"gameCreate\" || tableName == \"GameHelp\"){\r\n\t\t\t\t\ttableDataDict[index_i] = rowDataDict;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttableDataDict[rowKey] = rowDataDict;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tableDataDict\r\n\t},\r\n\r\n\t//解密\r\n\tDecodeText:function(textData){\r\n\r\n\t\tlet buffCount = textData.length;\r\n\t\tlet outText = \"\";\r\n\r\n\t\t//遍历字符串解密\r\n\t\tfor(let index_j=0; index_j<buffCount; ){\r\n\r\n\t\t\tlet value = textData.substring(index_j, index_j+4);\r\n\t\t\tvalue = parseInt(value,16)^this.Key;\r\n\t\t\toutText += String.fromCharCode(value);\r\n\r\n\t\t\tindex_j += 4;\r\n\t\t}\r\n\r\n\r\n\t\treturn outText\r\n\t},\r\n\t\r\n\t/**\r\n\t * 获取value转化后的值\r\n\t */\r\n\tGetTransformValue:function(valueStr){\r\n\t\tlet startStr = valueStr[0];\r\n\t\tlet endStr = valueStr[valueStr.length-1];\r\n\t\t//如果是列表\r\n\t\tif(startStr === \"[\" && endStr === \"]\"){\r\n\t\t\treturn JSON.parse(valueStr);\r\n\t\t}\r\n\t\telse if(startStr === \"{\" && endStr === \"}\"){\r\n\t\t\treturn JSON.parse(valueStr);\r\n\t\t}\r\n\t\telse if (valueStr.indexOf(\"return\") != -1){\r\n\t\t\treturn new Function(valueStr);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//去整\r\n\t\t\t//如果不是纯数字,则为字符串\r\n\t\t\tif(isNaN(valueStr)){\r\n\t\t\t\treturn valueStr\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn Number(valueStr)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// 获取表字段名对应联合表key字符串\r\n\tGetKeyNameStr:function(keyNameList, valueDict){\r\n\r\n\t\tlet keyValueList = [];\r\n\t\tlet count = keyNameList.length;\r\n\r\n\t\t//构建联合表key 字符串\r\n\t\tfor(let index = 0; index < count; index++){\r\n\t\t\tlet keyName = keyNameList[index];\r\n\t\t\tif (!valueDict.hasOwnProperty(keyName)){\r\n\t\t\t\tconsole.error(\"GetKeyNameStr valueDict(%s) dont have keyName(%s)\", JSON.stringify(valueDict), keyName);\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\tkeyValueList.push(valueDict[keyName]);\r\n\t\t}\r\n\r\n\t\treturn keyValueList.join(\"_\")\r\n\t},\r\n\t\r\n\t//加载json配置文件\r\n\tOnLoadJson:function(jsonFileName, jsonData){\r\n\r\n\t\tthis.jsonDict[jsonFileName] = jsonData;\r\n\t},\r\n\t//--------------------------联合key接口--------------------------------\r\n\t\r\n\t// 获取联合表keylist 对应的keystr\r\n\tGetMuchKeyStr:function(keyList){\r\n\t\treturn keyList.join(\"_\")\r\n\t},\r\n\t\r\n\t// 表数据输出\r\n\tDebugOutput:function(tableName=\"\"){\r\n\r\n\t\tlet tableInfo = null;\r\n\t\t\r\n\t\t//如果是指定表\r\n\t\tif(tableName){\r\n\t\t\ttableInfo = this.tableDict[tableName];\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttableInfo = this.tableDict;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar g_sss_SysDataManager = null;\r\n\r\n/**\r\n * 绑定模块外部方法\r\n */\r\nexports.GetModel = function(){\r\n    if(!g_sss_SysDataManager){\r\n        g_sss_SysDataManager = new sss_SysDataManager();\r\n    }\r\n    return g_sss_SysDataManager;\r\n}"]}