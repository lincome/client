{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\game\\FJSSZ/assets\\script\\game\\FJSSZ\\fjssz_PokerCard.js"],"names":["app","require","PokerCard","BaseClass","extend","Init","JS_Name","pokerDict","LOGIC_MASK_COLOR","LOGIC_MASK_VALUE","LOGIC_MASK_XIAOWANG","LOGIC_MASK_DAWANG","NNConst_BeiShu","LoadAllPokerRes","SubCardValue","poker","temp","length","substring","GetPokeCard","cardNode","isShowIcon1","isShowLandowner","hideBg","isRazz","isPartnerCard","type","type1","type2","num","cardColor","GetCardColor","cardValue","GetCardValue","numNode","getChildByName","active","numSp","getComponent","cc","Sprite","iconSp","icon1_Sp","spriteFrame","index","children","element","name","zIndex","Type","SIMPLE","sizeMode","SizeMode","RAW","node","scale","y","x","width","self","loader","loadResDir","SpriteFrame","err","assets","error","i","_name","color","g_PokerCard","exports","GetModel"],"mappings":"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","file":"fjssz_PokerCard.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\game\\FJSSZ","sourcesContent":["var app = require(\"fjssz_app\");\r\n\r\nvar PokerCard = app.BaseClass.extend({\r\n\r\n\t/**\r\n\t * 构造函数\r\n\t */\r\n\tInit: function () {\r\n\t\tthis.JS_Name = \"PokerCard\";\r\n\t\tthis.pokerDict = {};\r\n\t\tthis.LOGIC_MASK_COLOR = 0xF0;\r\n\t\tthis.LOGIC_MASK_VALUE = 0x0F;\r\n\r\n\t\tthis.LOGIC_MASK_XIAOWANG = 16;\r\n\t\tthis.LOGIC_MASK_DAWANG = 17;\r\n\t\tthis.NNConst_BeiShu = [[0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 5, 6, 8], [0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 5, 6, 8]];//牌型倍数\r\n\t\tthis.LoadAllPokerRes();\r\n\t},\r\n\r\n\tSubCardValue: function (poker) {\r\n\t\tlet temp = \"\";\r\n\t\tif (poker.length > 4) {\r\n\t\t\ttemp = poker;\r\n\t\t\ttemp = temp.substring(0, temp.length - 1);\r\n\t\t} else {\r\n\t\t\ttemp = poker;\r\n\t\t}\r\n\t\treturn temp;\r\n\t},\r\n\r\n\tGetPokeCard: function (poker, cardNode, isShowIcon1 = true, isShowLandowner = false, hideBg = false, isRazz = false, isPartnerCard = false) {\r\n\t\tif (0 == poker) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet type = \"\";\r\n\t\tlet type1 = \"\";\r\n\t\tlet type2 = \"\";\r\n\t\tlet num = \"\";\r\n\t\tlet cardColor = this.GetCardColor(poker);\r\n\t\tlet cardValue = this.GetCardValue(poker);\r\n\t\tlet numNode = cardNode.getChildByName(\"num\");\r\n\t\tnumNode.active = true;\r\n\t\tif (cardColor == 0) {\r\n\t\t\ttype = \"bg_diamond1_\";\r\n\t\t\ttype1 = type + 1;\r\n\t\t\ttype2 = type + 2;\r\n\t\t\tnum = \"red_\" + cardValue;\r\n\t\t} else if (cardColor == 16) {\r\n\t\t\ttype = \"bg_club1_\";\r\n\t\t\ttype1 = type + 1;\r\n\t\t\ttype2 = type + 2;\r\n\t\t\tnum = \"black_\" + cardValue;\r\n\t\t} else if (cardColor == 32) {\r\n\t\t\ttype = \"bg_heart1_\";\r\n\t\t\ttype1 = type + 1;\r\n\t\t\ttype2 = type + 2;\r\n\t\t\tnum = \"red_\" + cardValue;\r\n\t\t} else if (cardColor == 48) {\r\n\t\t\ttype = \"bg_spade1_\";\r\n\t\t\ttype1 = type + 1;\r\n\t\t\ttype2 = type + 2;\r\n\t\t\tnum = \"black_\" + cardValue;\r\n\t\t} else if (cardColor == 64) {//双数小鬼   0x42-0x4e\r\n\t\t\tnumNode.active = false;//2,3,4,5,6,7,8,9,a\r\n\t\t\tif (cardValue % 2 == 0) {//双数小鬼\r\n\t\t\t\ttype2 = \"icon_small_king_01\";\r\n\t\t\t\ttype1 = \"icon_small_king\";\r\n\t\t\t} else if (cardValue % 2 == 1) {//单数大鬼\r\n\t\t\t\ttype2 = \"icon_big_king_01\";\r\n\t\t\t\ttype1 = \"icon_big_king\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet numSp = cardNode.getChildByName(\"num\").getComponent(cc.Sprite);\r\n\t\tlet iconSp = cardNode.getChildByName(\"icon\").getComponent(cc.Sprite);\r\n\t\tlet icon1_Sp = cardNode.getChildByName(\"icon_1\").getComponent(cc.Sprite);\r\n\t\tnumSp.spriteFrame = this.pokerDict[num];\r\n\t\ticonSp.spriteFrame = this.pokerDict[type1];\r\n\t\ticon1_Sp.spriteFrame = this.pokerDict[type2];\r\n\t\tif (hideBg) {\r\n\t\t\tcardNode.getChildByName(\"poker_back\").active = false;\r\n\t\t}\r\n\t\tfor (let index = 0; index < cardNode.children.length; index++) {\r\n\t\t\tconst element = cardNode.children[index];\r\n\t\t\tif (element.name == \"icon_mapai\" || element.name == \"bg_poker\") {\r\n\t\t\t\telement.zIndex = 0\r\n\t\t\t}\r\n\t\t\telse if (element.name == \"poker_back\" || element.name == \"tag\") {\r\n\t\t\t\telement.zIndex = 3\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.zIndex = 2\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ticon1_Sp.type = cc.Sprite.Type.SIMPLE\r\n\t\ticonSp.type = cc.Sprite.Type.SIMPLE\r\n\t\ticon1_Sp.sizeMode = cc.Sprite.SizeMode.RAW\r\n\t\ticonSp.sizeMode = cc.Sprite.SizeMode.RAW\r\n\t\tif (cardColor == 64) {\r\n\t\t\ticon1_Sp.node.scale = 0.7\r\n\t\t\ticon1_Sp.node.y = 12\r\n\t\t\ticon1_Sp.node.x = -35\r\n\t\t\ticonSp.node.scale = 0.56\r\n\t\t\ticonSp.node.y = 3\r\n\t\t\ticonSp.node.x = 15\r\n\t\t}\r\n\t\telse{\r\n\t\t\ticon1_Sp.node.scale = 0.5\r\n\t\t\ticon1_Sp.node.y = 26\r\n\t\t\ticon1_Sp.node.x = -38\r\n\t\t\ticonSp.node.scale = 0.5\r\n\t\t\ticonSp.node.y = -25\r\n\t\t\ticonSp.node.x = 17\r\n\t\t\tif (cardValue == 10) {\r\n\t\t\t\tnumSp.node.width = 28\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tnumSp.node.width = 22\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tLoadAllPokerRes: function () {\r\n\t\tlet self = this;\r\n\t\tif (!this.pokerDict) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcc.loader.loadResDir(\"texture/new_poker\", cc.SpriteFrame, function (err, assets) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcc.error(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < assets.length; i++) {\r\n\t\t\t\tself.pokerDict[assets[i]._name] = assets[i];\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t//获取牌值\r\n\tGetCardValue: function (poker) {\r\n\t\treturn poker & this.LOGIC_MASK_VALUE;\r\n\t},\r\n\r\n\t//获取花色\r\n\tGetCardColor: function (poker) {\r\n\t\twhile (poker >= 256) {\r\n\t\t\tpoker -= 256;\r\n\t\t}\r\n\t\tlet color = poker & this.LOGIC_MASK_COLOR;\r\n\t\treturn color;\r\n\t},\r\n});\r\n\r\nvar g_PokerCard = null;\r\n\r\n/**\r\n * 绑定模块外部方法\r\n */\r\nexports.GetModel = function () {\r\n\tif (!g_PokerCard) {\r\n\t\tg_PokerCard = new PokerCard();\r\n\t}\r\n\treturn g_PokerCard;\r\n};"]}